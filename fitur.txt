-crud data barang 
sudah


fitur transaksi
-melakukan transaksi item 
-apabila memiliki fitur diskon maka sebelum transaksi akan mengecek apakah 
sebuah item akan memiliki diskon yang sedang aktif apa tidak
ketika input jumlah uang apabila angka dari total - jumlah uang belum mencapai 0 maka button tidak dapat di reset

//transaksi field

no transaksi: INV-000001 
tgl_transaksi : tgl now
waktu: waktu now
id_user: user login;
total_pembayaran: menghitung setiap item kemudian di collect dan di jumlahkan.dilakukan sebelum store transaksi dan detail transaksi
'id_user' : get data user yg login
total kembalian: menghitung hasil dari collect yang di jumlahkan kemudiaan dikurangi uang yang dibayarkan
maka akan muncul hasil dari kembalian apabila kurang dari jumlah yg dibayarkan maka akan return back dengan muncul eror uang kurang;


bentuk invoice : INV-000001 | 27.04.2022 / 17.00 pm | kasir:vito 

transaksi
protected $fillable = [
        'no_transaksi',
        'tgl_transaksi',
        'waktu_transaksi',
        'total_pembayaran',
        'id_user',
        'total_kembalian',
    ];

//detail transaksi
 protected $fillable = [
        'id_barang',
        'id_transaksi'
        'qty',
        'harga_item',
    ];


validasi transaksi:apabila stok 0 maka tidak dapat memilih dan ada tulisan stok habis kemudian ketika melakukan transaksi maka stok di databarang akan di update dan akan habis
    
//transaksi
<div class="col-6 mb-3">
<input type="text" autofocus class="form-control" name="nama" id="name" placeholder="Scan Barcode" >
</div>
pencarian nama dan barcode apabila menggunakan barcode maka akan langsung terinput
apabila mencari dengan nama maka akan muncul modal untuk memilih barang yang sama atau persis

membuat history login
-ketika login mencatat masuk dan keluar nya semua kariawan
-dan menghitung berapa lama mereka login
-ketika ada karyawan login dan tidak sengaja logout maka 
akan mengecek terlebih dahulu apabila pernah login di tgl yang sama 
apabila tidak ada maka akan di hitung sebagai sekali login
apabila ada maka akan dijumlahkan dengan dengan jam lainya dia login di tgl yg sama

membuat setting
-fitur pajak total item dikosongin 
 apabila tidak ada isinya atau null maka tidak akan menghitung pajak
-input nama toko



{{-- <script>
    getdata();
    $(document).ready(function () {
        $('#harga').on('input', function () {
            var barcode = $('#barcode').val().trim();
            if (barcode == '') {
                return;
            }
            var formData = $('#barcode_form').serialize();
            $.ajax({
                type: "POST",
                url: "{{ route('Transaksi.store.session') }}",
                data: formData,
                success: function (data) {
                    var pesan = 'data berhasil Ditambahkan';
                    location.reload(true);
                      $('#barcode').val('');
                    toaster(pesan);
                },
                error: function (xhr, status, error) {
                     var pesan = 'barang tidak ditemukan';
                    toastergagal(pesan);
                      $('#barcode').val('');
                }
            });        
        });
        $('.number-spinner-btn').click(function(event) {
            event.preventDefault();
            var input = $(this).parent().find('input');
            var id_barang = input.data('id');
            var harga_barang = input.data('harga');
            var qty = parseInt(input.val());
            var action = $(this).data('number');
            if (action == 'tambah') {
                qty++;
            } else if (action == 'kurang') {
                qty--;
            }
            if (qty > 0) {
                updateCartItem(id_barang, qty, '{{ route('update.cart') }}');
                getdata();
            } else {
                removeFromCart(id_barang, '{{ route('remove-from-cart') }}');
                getdata();
            }
            input.val(qty);
        });
        $('input[name="jumlah_uang"]').on('blur', function() {
            getdata();
        });
         $('.imgbarang').click(function (barcode) {
            var barcode = $(this).data('barcode');
            $.ajax({
                type: "POST",
                url: "{{ route('Transaksi.store.session') }}",
                data: {
                    barcode:barcode,
                    _token: '{{ csrf_token() }}'
                },
                success: function (data) {
                    var pesan = 'data berhasil Ditambahkan';
                    location.reload(true);
                    toaster(pesan);
                },
                error: function (xhr, status, error) {
                    alert('error');
                }
            });     
         });
    });


    function kembalian(total_barang){    
        var jumlah_uang = $('input[name="jumlah_uang"]').val();
        if(jumlah_uang){
            var hitungkembalian = jumlah_uang - total_barang;
            $('#kembalian').text('Rp.' + hitungkembalian.toLocaleString('id-ID'));
        }
    }
    function toaster(pesan)
    {
        var mes = pesan;
        toastr.clear();
        NioApp.Toast(pesan, 'success', {
          position: 'top-right',
          showDuration: "100",
          preventDuplicates: true,
          progressBar: true,
          showMethod: "fadeIn",
          hideMethod: "fadeOut"
      });
    }
    function toastergagal(pesan)
    {
        var mes = pesan;
        toastr.clear();
        NioApp.Toast(pesan, 'error', {
          position: 'top-right',
          showDuration: "100",
          preventDuplicates: true,
          progressBar: true,
          showMethod: "fadeIn",
          hideMethod: "fadeOut"
      });
    }

    function getdata()
    {
        $.ajax({
            type: 'POST',
            url: '/get-session-data',
            data: {
                _token: '{{ csrf_token() }}'
            },
            success: function(response) {
                var databarang = response;
                var total_barang = 0;
                $.each(databarang, function (index, barang) {
                    var hitung = barang.harga_barang * barang.qty;
                    total_barang += hitung;
                });
                $('#SubTotal').text('Rp.' + total_barang.toLocaleString('id-ID'));
                $('#total').text('Rp.' + total_barang.toLocaleString('id-ID'));
                kembalian(total_barang);

            },
            error: function(xhr) {
                console.log('Error retrieving session data');
            }
        });
    }
    function updateCartItem(id_barang, qty, url) {
        $.ajax({
            url: url,
            type: 'POST',
            data: {
                id_barang: id_barang,
                qty: qty,
                _token: '{{ csrf_token() }}'
            },
            success: function(response) {
                var pesan = 'data berhasil diubah';
                toaster(pesan);
                getdata();
            },
            error: function(xhr) {
             alert('gagal update data');
         }
     });
    }

    function removeFromCart(id_barang, url) {
        $.ajax({
            url: url,
            type: 'POST',
            data: {
                id_barang: id_barang,
                _token: '{{ csrf_token() }}'
            },
            success: function(response) {
               location.reload(true);
               var pesan = 'data berhasil di hapus';
               toaster(pesan);
               getdata();
           },
           error: function(xhr) {
           }
       });
    }
</script> --}}



